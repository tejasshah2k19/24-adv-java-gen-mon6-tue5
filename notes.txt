Servlet 

Jsp 
-------------------------


src->main->java

	com->google 
		1) controller
		2) bean
		3) dao
		4) util 
		 
		  

---------------------------

Servlet -> server side -> request -> process -> response


->class 
->where -> controller -> com folder -> 


webapplication -> form -> submit ->request -> server
		process -> response 
		
		
		client:request - server:response 
	
servlet->
	1) class extends HttpServlet
	2) override service : public void service(HttpServletRequest request,HttpServletRepsonse response)		
	3)
thread->class extends Thread 
exception=>class extends Exception 
 ?where? 
 	java -> com -> controller {logic} 

-----------------------------------------------

adv java -> project -> jar ? 


tomcat -> lib -> servlet-api.jar 

html -> form -> 

	method => GET  => data -> URL -> 
	method => POST {hidden} 
	
	PrintWriter out = response.getWriter();
	response.setContentType("text/html");
	
	out.print("");
 
















1)extends HttpServlet 
2)service -> HttpServletRequest,HttpServletResponse 
3)@WebServlet => @WebServlet("/SignupServlet") 


form->submit->servlet->request->
read -> getParameter()

request.getParameter("parameterName"); 
 


response.setContentType("text/html");
PrintWriter out = response.getWriter();
out.print("===>");


------------------------------------------



_______ class we need to extends for servlet ? 
HttpServlet 

__________ and _________ are the argument of a service method ? 
HttpServletRequest 	
HttpServletResponse 


__________ method is responsible to write logic in servlet ? 
service


_______________ annotation is used to map servlet with an url ?
@WebServlet 



_____________ and ___________ exceptions are used in service method?
IOException		ServletException 



____________ class is responsible for response {browser output }?
PrintWriter


______________ method will help you to set content type for response? 
 setContentType()


--------------------------------------------------------------
input:text
""

"   "

input:radio
null


blank and null -> 

-----------------------------------------------------------------------

JSP -> java server pages 
	   java servlet pages 
	   
	   
	   jsp -> HTML + Java 
	   
Jsp:Servlet 


	jsp -> html? java? 
	

default -> jsp -> consider -> HTML 

java code scriptlet ->    <%  %> 
java print expression ->  <%= %>
declaration ----> <%!  %> 

-------------------------------------------------------------------------------
HTML -> jsp -> 

------------------------------------------------------------------------------


Filter 
->pre process the request -> 


1) class implements Filter 
2) init doFilter:logic destroy 
3) @WebFilter("/")




EmployeeRegistration.jsp 
	
		FirstName : 
		Email :
		Password : 
		BirthYear : 2010
						submit
		
		
EmployeeRegistrationFilter 		
		
		
						
EmployeeRegistrationServlet 
	db 
	EmployeeLogin.jsp 
	  
----------------------------------------------------------------------


pre process -> filter

validation 
ip
country 
encrpytion
token 
header 

-------------------------------------------------------------------------
servlet ? 
	
CGI ->  common gateway interface 

serlvet life cycle -> 
		
-------------------------------------------------------------------------

		
init()->1 
service()->N 
destroy()->1


1) load class 
2) create instance 
3) init 
4) service
5) destroy 

------------------------------------------------------------------

filter -> 
	init 
	doFilter
	destroy 
	
	
	servlet					vs				filter 
	request->init?						server start -> filter init 
	request->service					request->doFilter	
	shutdown->destroy 					shutdown -> destroy 


------------------------------------------------------------------------


Facebook.com 
		Signup
			fn ln em pwd 
				submit ---->
						read 
						validation
							true :->
								db insert 
							redirect Login --->
-----------------------------------------------------------------------------								
								

database insert query using java -->

JDBC -> 

jdbc api -> 

java.sql.* 

java ---> sql ---> database 
	1)open connection  --> Connection{interface} 
	2)execute query    --> PreparedStatement {interface}
	
	
java ---> db ---> connection open ---> Connection
sql ---> query -> run ----> PreparedStatement 


SQL-->

Oralce , pg , mariadb ,mysql , microsoft sql server, 

driver class -> lib 

	
how to get driver class? 
	driver class -> vendor -> db provider 
	mysql -> 
	mysql + java + jdbc + driver 
	and we will get link 
	
----------------------------------------------------------------------------	
	When we add any jar we have to link that jar in build-path
	
	project -> right click -> java build path -> 
	now click on libraries tab 
	-> if classpath/module path then click on class path 
	-> if not then ignore ->
	-> now click on add jar -> browse -> project->webinf->lib->mysql-connector.jar->
	-> now click on order and export tab -> 
	-> select all -> apply and close 
	
-------------------------------------------------------------------------------	
	
	Connection open -> database 

	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	  
	
	
	








































